{"timestamp":"2025-07-01T16:38:22.635001","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-01T16:38:22.635845","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/basicDag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-01T16:38:22.772582Z","level":"info","event":"Processing s3://example_bucket2","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-01T16:38:23.192145Z","level":"info","event":"Container output: b'\\nHello from Docker!\\nThis message shows that your installation appears to be working correctly.\\n\\nTo generate this message, Docker took the following steps:\\n 1. The Docker client contacted the Docker daemon.\\n 2. The Docker daemon pulled the \"hello-world\" image from the Docker Hub.\\n    (amd64)\\n 3. The Docker daemon created a new container from that image which runs the\\n    executable that produces the output you are currently reading.\\n 4. The Docker daemon streamed that output to the Docker client, which sent it\\n    to your terminal.\\n\\nTo try something more ambitious, you can run an Ubuntu container with:\\n $ docker run -it ubuntu bash\\n\\nShare images, automate workflows, and more with a free Docker ID:\\n https://hub.docker.com/\\n\\nFor more examples and ideas, visit:\\n https://docs.docker.com/get-started/\\n\\n'","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-01T16:38:33.193273","level":"info","event":"Done. Returned value was: Processed s3://example_bucket2 successfully","logger":"airflow.task.operators.airflow.providers.standard.decorators.python._PythonDecoratedOperator"}
{"timestamp":"2025-07-01T16:38:33.193780","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0197c6da-912b-74f9-9933-2efed7b59339'), task_id='parse_s3_data', dag_id='time_based_demo_dag', run_id='manual__2025-07-01T16:38:10.677072+00:00', try_number=1, map_index=1, hostname='0d758566834f', context_carrier={}, task=<Task(_PythonDecoratedOperator): parse_s3_data>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 7, 1, 16, 38, 22, 407782, tzinfo=TzInfo(UTC)), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=True, rendered_map_index=None)","logger":"task"}
