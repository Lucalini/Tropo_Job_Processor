{"timestamp":"2025-07-01T21:57:37.459361","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-01T21:57:37.460035","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/basicDag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-01T21:57:37.648866","level":"info","event":"Starting docker container from image hello-world","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-07-01T21:57:37.920685","level":"info","event":"","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-07-01T21:57:37.921252","level":"info","event":"Hello from Docker!","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-07-01T21:57:37.921395","level":"info","event":"This message shows that your installation appears to be working correctly.","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-07-01T21:57:37.921511","level":"info","event":"","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-07-01T21:57:37.921634","level":"info","event":"To generate this message, Docker took the following steps:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-07-01T21:57:37.922037","level":"info","event":" 1. The Docker client contacted the Docker daemon.","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-07-01T21:57:37.922198","level":"info","event":" 2. The Docker daemon pulled the \"hello-world\" image from the Docker Hub.","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-07-01T21:57:37.922408","level":"info","event":"    (amd64)","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-07-01T21:57:37.922533","level":"info","event":" 3. The Docker daemon created a new container from that image which runs the","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-07-01T21:57:37.922661","level":"info","event":"    executable that produces the output you are currently reading.","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-07-01T21:57:37.923036","level":"info","event":" 4. The Docker daemon streamed that output to the Docker client, which sent it","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-07-01T21:57:37.923218","level":"info","event":"    to your terminal.","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-07-01T21:57:37.923361","level":"info","event":"","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-07-01T21:57:37.923491","level":"info","event":"To try something more ambitious, you can run an Ubuntu container with:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-07-01T21:57:37.923641","level":"info","event":" $ docker run -it ubuntu bash","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-07-01T21:57:37.924088","level":"info","event":"","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-07-01T21:57:37.924219","level":"info","event":"Share images, automate workflows, and more with a free Docker ID:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-07-01T21:57:37.924299","level":"info","event":" https://hub.docker.com/","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-07-01T21:57:37.924464","level":"info","event":"","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-07-01T21:57:37.924598","level":"info","event":"For more examples and ideas, visit:","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-07-01T21:57:37.924925","level":"info","event":" https://docs.docker.com/get-started/","logger":"airflow.task.operators.airflow.providers.docker.operators.docker.DockerOperator"}
{"timestamp":"2025-07-01T21:57:38.072204","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0197c7fe-adb9-7447-9e00-fdf82cb4f62b'), task_id='tropo_job_group.spinup_workers', dag_id='time_based_demo_dag', run_id='manual__2025-07-01T21:57:14.408928+00:00', try_number=1, map_index=1, hostname='24cd23d964af', context_carrier={}, task=<Task(DockerOperator): tropo_job_group.spinup_workers>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 7, 1, 21, 57, 37, 292717, tzinfo=TzInfo(UTC)), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None)","logger":"task"}
